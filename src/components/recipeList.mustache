<div
  class="flex flex-wrap gap-6 bg-slate-900 p-4 content-start h-[calc(100%-91px)]"
>
  {{#recipes}}
  <div class="relative h-56 w-52 bg-slate-300 rounded-md">
    <div class="h-22 absolute bottom-0 left-0 w-full bg-slate-400 rounded-md">
      <div class="flex">
        <div
          class="p-2 cursor-pointer"
          onclick="window.location.href='/recipe/{{ id }}'"
        >
          <h2 class="text-base font-bold">{{ name }}</h2>
          <p class="text-xl font-medium text-red-800">{{ cost }}â‚¬</p>
          <div id="stars-{{ id }}" class="flex"></div>
        </div>
        <div
          class="absolute right-4 top-4 flex flex-col items-center justify-center"
        >
          <i
            class="ri-heart-line text-4xl text-red-700 cursor-pointer"
            onclick="favoriteRecipe()"
          ></i>
          <p id="time-{{ id }}" class="mt-2 text-xs"></p>
        </div>
      </div>
    </div>
  </div>
  {{/recipes}}
  {{> ../components/formRecipe }}

  {{^recipes}}
  <h1>No recipes</h1>
  {{/recipes}}
</div>

<script>
  let starsContainer
  let yellowStar = document.createElement('i')
  const grayStar = document.createElement('i')
  let numGray

  let timeContainer, hours, minutes, seconds, formattedTime
  ;`{{#recipes}}`
  function favoriteRecipe() {
    fetch('/favorite', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({
        recipeId: '{{id}}',
      }),
    })
      .then((res) => {
        if (!res.ok) {
          throw new Error(`HTTP error! Status: ${res.data}`)
        }
        return res.json()
      })
      .then((data) => {
        console.log(data)
      })
      .catch((error) => {
        console.error('Error:', error)
      })
  }

  starsContainer = document.getElementById('stars-{{id}}')
  yellowStar.className = 'ri-star-fill text-yellow-500'
  grayStar.className = 'ri-star-fill'

  for (let i = 0; i < `{{difficulty}}`; i++) {
    starsContainer.appendChild(yellowStar.cloneNode(true))
  }

  numGray = 5 - `{{difficulty}}`

  for (let i = 0; i < numGray; i++) {
    starsContainer.appendChild(grayStar.cloneNode(true))
  }

  timeContainer = document.getElementById('time-{{id}}')

  function formatTime(timeString) {
    ;[hours, minutes, seconds] = timeString.split(':').map(Number)
  }
  formatTime('{{time}}')
  formattedTime = ''

  if (hours !== 0) {
    formattedTime = hours + 'h'
    if (minutes !== 0) {
      formattedTime += ' e ' + minutes + 'm'
    }
  } else {
    formattedTime = minutes + 'm'
  }

  timeContainer.innerHTML = formattedTime
  ;`{{/recipes}}`
</script>
