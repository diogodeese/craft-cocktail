<div id="menuContainer"></div>

<script>
  const token = localStorage.getItem('token')

  fetch('/menu', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${token}`
    }
  })
    .then((response) => response.json())
    .then((data) => {
      const menuContainer = document.getElementById('menuContainer')

      const menuList = document.createElement('ul')

      menuList.className = 'flex items-center gap-6 bg-slate-800 p-2'

      data.menuItems.forEach((menuItem) => {
        const listItem = document.createElement('li')
        const link = document.createElement('a')

        if (window.location.href === menuItem.url) {
          link.classList.add('bg-slate-700')
        }

        link.className = 'rounded-md p-2 text-white hover:bg-slate-700'

        let shouldShowLink
        if (data.userProfile !== null) {
          shouldShowLink = menuItem.logged_in_users_visible
        } else {
          shouldShowLink = menuItem.logged_out_users_visible
        }

        if (shouldShowLink) {
          link.href = menuItem.url
          link.textContent = menuItem.name

          if (menuItem.id === 1) {
            link.textContent = ''
            link.className = ''
            link.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="100" viewBox="0 0 640 480" xml:space="preserve" style="opacity: 1"><defs></defs><g transform="matrix(7.26 0 0 7.26 320.17 242.35)" id="SvgjsG2927"><path style="stroke: none;stroke-width: 1;stroke-dasharray: none;stroke-linecap: butt;stroke-dashoffset: 0;stroke-linejoin: miter;stroke-miterlimit: 4;fill: rgb(255, 255, 255);fill-rule: nonzero;opacity: 1;"transform=" translate(-18.01, -16)"d="M 29.931 3.703 L 26.255 5.21 L 25.07 5.763 C 23.427 4.222 19.615 3.5 16 3.5 c -4.726 0 -9.8 1.228 -9.907 3.916 C 6.092 7.444 6.083 7.471 6.083 7.5 c 0 0.542 0.202 1.025 0.562 1.452 l 8.855 9.741 v 5.815 h -0.001 c -0.008 0.758 -1.119 1.991 -3.167 1.991 c 1.475 0 2.167 -1.094 2.169 -1.935 C 11.914 24.788 10 25.567 10 26.5 c 0 1.105 2.687 2 6 2 c 3.314 0 6 -0.895 6 -2 c 0 -0.933 -1.913 -1.712 -4.5 -1.935 c 0.001 0.841 0.694 1.935 2.169 1.935 c -2.049 0 -3.16 -1.233 -3.167 -1.991 c -0.001 0 -0.001 0 -0.002 0 v -5.815 l 8.828 -9.711 V 8.98 c -0.001 0 -0.002 0.001 -0.002 0.002 c 0.375 -0.435 0.591 -0.926 0.591 -1.482 c 0 -0.029 -0.009 -0.056 -0.01 -0.084 c -0.021 -0.508 -0.219 -0.963 -0.559 -1.369 l 1.064 -0.497 L 29.931 3.703 z M 7.468 8.371 C 7.219 8.095 7.083 7.803 7.083 7.5 c 0 -1.657 3.992 -3 8.917 -3 c 3.572 0 6.646 0.709 8.069 1.73 l -5.932 2.767 c -0.491 -0.701 -1.781 -0.825 -3.024 -0.245 c -0.838 0.391 -1.438 1.004 -1.677 1.616 c -2.812 -0.285 -5.046 -1.019 -5.934 -1.958 L 7.468 8.371 z M 13.266 11.346 l -2.094 1.1 L 9.503 10.61 C 10.612 10.97 11.914 11.205 13.266 11.346 z M 19.96 13.401 C 19.758 12.896 18.073 12.5 16 12.5 s -3.758 0.396 -3.96 0.901 l -0.86 -0.946 l 2.3 -0.943 c 0.461 0.749 1.785 0.893 3.061 0.299 c 0.216 -0.101 0.41 -0.221 0.593 -0.347 c 1.917 -0.08 3.819 -0.353 5.364 -0.854 L 19.96 13.401 z M 24.917 7.5 c 0 0.303 -0.137 0.596 -0.386 0.872 l -0.033 0.037 c -0.934 0.989 -3.358 1.747 -6.377 1.996 c 0.191 -0.364 0.264 -0.735 0.175 -1.068 l 6.096 -2.843 C 24.726 6.809 24.917 7.146 24.917 7.5 z"stroke-linecap="round"/></g></svg>`
          } else if (menuItem.id === 2) {
            listItem.className = 'flex-grow'
          } else if (menuItem.id === 5) {
            link.onclick = () => localStorage.removeItem('token')
          }

          listItem.appendChild(link)
          menuList.appendChild(listItem)
        }
      })

      menuContainer.appendChild(menuList)
    })
    .catch((error) => console.error('Error fetching menu:', error))
</script>
