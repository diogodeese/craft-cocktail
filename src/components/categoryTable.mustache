<div class="h-screen overflow-x-auto shadow-md bg-slate-800">
  <table
    class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400"
  >
    <thead
      class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400"
    >
      <tr>
        <th scope="col" class="px-6 py-3">ID</th>
        <th scope="col" class="px-6 py-3">Name</th>
        <th scope="col" class="px-6 py-3">Edit</th>
      </tr>
    </thead>
    <tbody id="categories"></tbody>
  </table>

  <div
    id="editCategory"
    tabindex="-1"
    aria-hidden="true"
    class="fixed top-0 left-0 right-0 z-50 items-center justify-center hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full"
  >
    <div class="relative w-full max-w-2xl max-h-full">
      <!-- Modal content -->
      <form class="relative bg-white rounded-lg shadow dark:bg-gray-700">
        <!-- Modal header -->
        <div
          class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600"
        >
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
            Edit category
          </h3>
          <button
            type="button"
            class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
            data-modal-hide="editCategory"
          >
            <svg
              class="w-3 h-3"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 14 14"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
              />
            </svg>
            <span class="sr-only">Close modal</span>
          </button>
        </div>
        <!-- Modal body -->
        <div class="p-6 space-y-6">
          <div class="grid grid-cols-6 gap-6">
            <div class="col-span-6 sm:col-span-3">
              <label
                for="categoryName"
                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                >Category Name</label
              >
              <input
                type="text"
                name="categoryName"
                id="categoryName"
                class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-600 focus:border-blue-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder=""
                required=""
              />
            </div>
          </div>
        </div>
        <!-- Modal footer -->
        <div
          class="flex items-center p-6 space-x-3 rtl:space-x-reverse border-t border-gray-200 rounded-b dark:border-gray-600"
        >
          <button
            type="button"
            class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
            onclick="saveCategoryChanges()"
            data-modal-hide="editCategory"
          >
            Save
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  function saveCategoryChanges() {
    const categoryName = document.getElementById('categoryName').value
    const currentCategoryId =
      document.getElementById('editCategory').currentCategoryId

    fetch(`/category`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
      body: JSON.stringify({
        category: {
          id: currentCategoryId,
          name: categoryName,
        },
      }),
    })
      .then((response) => response.json())
      .then((data) => {
        console.log('Category updated successfully:', data)
        window.location.href = '/backoffice'
      })
      .catch((error) => console.error('Error updating category:', error))
  }

  function openEditModal(categoryId, categoryName) {
    // Set the category name in the input field
    document.getElementById('categoryName').value = categoryName

    const modal = document.getElementById('editCategory')
    modal.currentCategoryId = categoryId

    // Display the modal
    modal.classList.remove('hidden')
  }

  fetch('/categories')
    .then((response) => response.json())
    .then((data) => {
      const categoriesTableBody = document.getElementById('categories')

      data.categories.forEach((category) => {
        const newRow = document.createElement('tr')
        newRow.className =
          'bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600'

        const idCell = document.createElement('td')
        idCell.className = 'w-4 p-4'
        const idLabel = document.createElement('label')
        idLabel.textContent = category.id
        idCell.appendChild(idLabel)

        const nameCell = document.createElement('th')
        nameCell.scope = 'row'
        nameCell.className =
          'flex items-center px-6 py-4 text-gray-900 whitespace-nowrap dark:text-white'
        const nameDiv = document.createElement('div')
        nameDiv.className = 'text-base font-semibold'
        nameDiv.textContent = category.name
        nameCell.appendChild(nameDiv)

        const editCell = document.createElement('td')
        editCell.className = 'px-6 py-4 right-0'
        const editButton = document.createElement('button')
        editButton.type = 'button'
        editButton.dataset.modalToggle = 'editCategory'
        editButton.dataset.modalTarget = 'editCategory'
        editButton.className =
          'font-medium text-blue-600 dark:text-blue-500 hover:underline'
        editButton.textContent = 'Edit'
        // Attach event listener to dynamically open the modal with the category name
        editButton.addEventListener('click', () =>
          openEditModal(category.id, category.name)
        )
        editCell.appendChild(editButton)

        // Append cells to the new row
        newRow.appendChild(idCell)
        newRow.appendChild(nameCell)
        newRow.appendChild(editCell)

        // Append the new row to the tbody
        categoriesTableBody.appendChild(newRow)
      })
    })
    .catch((error) => console.error('Error fetching categories:', error))
</script>
