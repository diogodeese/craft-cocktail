<div>
  <table border="1">
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Edit</th>
      </tr>
    </thead>
    <tbody id="categoryTableBody"></tbody>
  </table>

  <div
    id="editCategoryModal"
    tabindex="-1"
    aria-hidden="true"
    class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full"
  >
    <!-- Modal content -->
    <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
      <!-- Modal header -->
      <div
        class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600"
      >
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
          Edit Category
        </h3>
        <button
          type="button"
          class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
          data-modal-toggle="editCategoryModal"
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
            />
          </svg>
          <span class="sr-only">Close</span>
        </button>
      </div>
      <!-- Modal body -->
      <form class="p-4 md:p-5">
        <div class="col-span-2">
          <label
            for="categoryName"
            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
            >Category Name</label
          >
          <input
            type="text"
            id="categoryName"
            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
            placeholder="Type category name"
            required=""
          />
        </div>
        <button
          type="button"
          class="text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
          onclick="saveCategoryChanges()"
        >
          Save Changes
        </button>
      </form>
    </div>
  </div>

  <script>
    let currentCategoryId;

    async function editCategory(categoryId) {
      try {
        currentCategoryId = categoryId;
        const response = await fetch("/category/" + currentCategoryId);
        const data = await response.json();

        const categoryName = data.category.name;

        document.getElementById("categoryName").value = categoryName;

        document.getElementById("editCategoryModal").classList.remove("hidden");
      } catch (error) {
        console.error("Error fetching category:", error);
      }
    }

    function saveCategoryChanges() {
      const categoryName = document.getElementById("categoryName").value;

      fetch(`/category/${currentCategoryId}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          category: {
            id: currentCategoryId,
            name: categoryName,
          },
        }),
      })
        .then((response) => response.json())
        .then((data) => {
          document.getElementById("editCategoryModal").classList.add("hidden");
          window.location.reload();
        })
        .catch((error) => console.error("Error updating category:", error));
    }

    fetch("/categories")
      .then((response) => response.json())
      .then((data) => {
        const categoryTableBody = document.getElementById("categoryTableBody");
        data.categories.forEach((category) => {
          const row = document.createElement("tr");
          row.innerHTML = `<td>${category.id}</td><td>${category.name}</td><td><button onclick="editCategory(${category.id})">Edit</button></td>`;
          categoryTableBody.appendChild(row);
        });
      })
      .catch((error) => console.error("Error fetching categories:", error));
  </script>
</div>
